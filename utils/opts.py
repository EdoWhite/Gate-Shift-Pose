import argparse
parser = argparse.ArgumentParser(description="PyTorch implementation of Gate-Shift Networks")
parser.add_argument('--dataset', type=str, choices=['something-v1', 'diving48', 'something-v2', 'kinetics400', 'meccano', 'FRFS'])
parser.add_argument('--dataset_path', type=str, default='./dataset')
parser.add_argument('--experiment_name', type=str, default='')
parser.add_argument('--experiment_path', type=str, default='.')
parser.add_argument('--train_list', type=str,default="")
parser.add_argument('--val_list', type=str, default="")
#parser.add_argument('--split', type=str, default=1)
parser.add_argument('--root_path', type=str, default="")
parser.add_argument('--store_name', type=str, default="")
# ========================= Model Configs ==========================
parser.add_argument('--early_fusion_poses', default=False, action="store_true")
parser.add_argument('--num_channels', type=int, default=3)
parser.add_argument('--rand_augment', default=False, action="store_true")
parser.add_argument('--late_fusion_poses', default=False, action="store_true")
parser.add_argument('--late_fusion_poses_fast', default=False, action="store_true")

parser.add_argument('--finetune', default=False, action="store_true")
parser.add_argument('--feature_extractor', default=False, action="store_true")
parser.add_argument('--checkpoint_path', type=str)

parser.add_argument('--arch', type=str, default="BNInception")
parser.add_argument('--num_segments', type=int, default=3)
parser.add_argument('--frame_interval', type=int, default=5)
parser.add_argument('--consensus_type', type=str, default='avg')
parser.add_argument('--gsf', default=False, action="store_true", help='Enable GSF in the backbone')
parser.add_argument('--gsf_ch_ratio', default=100, type=float)
parser.add_argument('--dropout', '--do', default=0.5, type=float, metavar='DO', help='dropout ratio (default: 0.5)')
parser.add_argument('--loss_type', type=str, default="nll", choices=['nll'])
# ========================= Learning Configs ==========================
parser.add_argument('--epochs', default=60, type=int, metavar='N', help='number of total epochs to run')
parser.add_argument('-b', '--batch-size', default=16, type=int, metavar='N', help='mini-batch size (default: 16)')
parser.add_argument('--iter_size', default=2, type=int, help='Number of iterations to wait before updating the weights')
parser.add_argument('--lr', '--learning-rate', default=0.01, type=float, metavar='LR', help='initial learning rate')
parser.add_argument('--warmup', default=10, type=int, help='Number of epochs for linear warmup')
parser.add_argument('--momentum', default=0.9, type=float, metavar='M', help='momentum')
parser.add_argument('--weight-decay', '--wd', default=5e-4, type=float, metavar='W', help='weight decay (default: 5e-4)')
parser.add_argument('--with_amp', default=False, action="store_true")
parser.add_argument('--clip-gradient', '--gd', default=20, type=float, metavar='W', help='gradient norm clipping (default: disabled)')
# ========================= Monitor Configs ==========================
parser.add_argument('--print-freq', '-p', default=20, type=int, metavar='N', help='print frequency (default: 10)')
parser.add_argument('--eval-freq', '-ef', default=10, type=int, metavar='N', help='evaluation frequency (default: 5)')
# ========================= Runtime Configs ==========================
parser.add_argument('-j', '--workers', default=4, type=int, metavar='N', help='number of data loading workers (default: 4)')
parser.add_argument('--resume', default='', type=str, metavar='PATH', help='path to latest checkpoint (default: none)')
parser.add_argument('-e', '--evaluate', dest='evaluate', action='store_true', help='evaluate model on validation set')
parser.add_argument('--snapshot_pref', type=str, default="")
parser.add_argument('--checkpoint', type=str, default="")
parser.add_argument('--start-epoch', default=0, type=int, metavar='N', help='manual epoch number (useful on restarts)')
parser.add_argument('--gpus', nargs='+', type=int, default=None)
parser.add_argument('--flow_prefix', default="", type=str)
parser.add_argument('--root_log',type=str, default='log')
parser.add_argument('--root_model', type=str, default='model')
parser.add_argument('--root_output',type=str, default='output')
parser.add_argument('--name',type=str, default='')
